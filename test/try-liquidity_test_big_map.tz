parameter %default string;
storage (pair :storage (big_map string int) (option int));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DIP { DUP @storage } ;
       SWAP ;
       CDR %r ;
       DIP 2 { DUP @storage } ;
       DIG 2 ;
       CAR %bm ;
       DIP 2 { DUP @parameter } ;
       DIG 2 ;
       GET ;
       IF_NONE
         { DIP 2 { DUP @storage } ;
           DIG 2 ;
           CAR %bm ;
           PUSH int 0 ;
           DIP 3 { DUP @parameter } ;
           DIG 3 ;
           DIP { SOME } ;
           UPDATE }
         { PUSH int 0 ;
           DIP { DUP @x } ;
           SWAP ;
           COMPARE ;
           LT ;
           IF { DIP 3 { DUP @storage } ;
                DIG 3 ;
                CAR %bm ;
                DIP 3 { DUP @parameter } ;
                DIG 3 ;
                DIP { NONE int } ;
                UPDATE }
              { PUSH int 10 ;
                DIP { DUP @x } ;
                SWAP ;
                COMPARE ;
                LT ;
                IF { DIP 3 { DUP @storage } ;
                     DIG 3 ;
                     CAR %bm ;
                     PUSH int 1 ;
                     DIP 2 { DUP @x } ;
                     DIG 2 ;
                     ADD ;
                     DIP 4 { DUP @parameter } ;
                     DIG 4 ;
                     DIP { SOME } ;
                     UPDATE }
                   { PUSH int 100 ;
                     DIP { DUP @x } ;
                     SWAP ;
                     COMPARE ;
                     GT ;
                     IF { DIP 3 { DUP @storage } ;
                          DIG 3 ;
                          CAR %bm ;
                          PUSH int -1 ;
                          DIP 4 { DUP @parameter } ;
                          DIG 4 ;
                          DIP { SOME } ;
                          UPDATE }
                        { DIP 3 { DUP @storage } ;
                          DIG 3 ;
                          CAR %bm ;
                          DIP { DUP @x } ;
                          SWAP ;
                          PUSH int 2 ;
                          MUL ;
                          DIP 4 { DUP @parameter } ;
                          DIG 4 ;
                          DIP { SOME } ;
                          UPDATE } } } ;
           DIP { DROP } } ;
       PAIR @storage %bm %r ;
       DUP @storage ;
       CAR %bm ;
       DIP { DUP @storage } ;
       SWAP ;
       CAR %bm ;
       DIP 3 { DUP @parameter } ;
       DIG 3 ;
       DIP 3 { DROP 3 } ;
       GET @r ;
       SWAP ;
       PAIR @storage %bm %r ;
       NIL operation ;
       PAIR };