parameter
  (or (pair %transfer address (pair nat (option bytes)))
      (or (pair %balanceOf address (contract (pair address nat)))
          (or (contract %totalSupply nat) (or (nat %burn) (list %mint (pair address nat))))));
storage
  (pair :storage
     (big_map :accounts address nat)
     (pair (nat %totalSupply)
           (pair (pair :metadata %metadata
                    (pair %version nat nat)
                    (pair (nat %decimals) (pair (string %name) (string %symbol))))
                 (pair :internal_storage %internal (address %owner) (unit %rest)))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         { RENAME @_dest_tokens_data_slash_39 ;
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           DIP { DUP } ;
           SWAP ;
           CAR @dest ;
           DIP 2 { DUP } ;
           DIG 2 ;
           { CDR ; CAR @tokens } ;
           DIP 3 { DUP } ;
           DIG 3 ;
           { CDR ; CDR @data } ;
           PUSH mutez 0 ;
           AMOUNT ;
           COMPARE ;
           NEQ ;
           IF { PUSH string "Don't send DUN" ; FAILWITH } { UNIT } ;
           DROP ;
           DIP 3 { DUP @storage } ;
           DIG 3 ;
           CDR ;
           DIP 4 { DUP @storage } ;
           DIG 4 ;
           CAR %accounts ;
           DIP 3 { DUP @tokens } ;
           DIG 3 ;
           PAIR ;
           DIP 4 { DUP @dest } ;
           DIG 4 ;
           PAIR ;
           DUP ;
           CAR @dest ;
           DIP { DUP } ;
           SWAP ;
           { CDR ; CAR @tokens } ;
           DIP 2 { DUP } ;
           DIG 2 ;
           { CDR ; CDR @accounts } ;
           DUP @accounts ;
           SENDER ;
           PAIR ;
           DUP ;
           CDR @accounts ;
           DIP { DUP } ;
           SWAP ;
           CAR @a ;
           GET ;
           IF_NONE { PUSH nat 0 } {} ;
           DIP { DROP } ;
           DIP { DUP @accounts } ;
           SWAP ;
           DIP 3 { DUP @tokens } ;
           DIG 3 ;
           DIP 2 { DUP @sender_balance } ;
           DIG 2 ;
           SUB ;
           ISNAT ;
           IF_NONE
             { DIP { DUP @sender_balance } ;
               SWAP ;
               PUSH string "Not enough tokens for transfer" ;
               PAIR ;
               FAILWITH }
             {} ;
           RENAME @new_sender_balance ;
           PAIR ;
           SENDER ;
           PAIR ;
           DUP ;
           { CDR ; CAR @balance } ;
           DIP { DUP } ;
           SWAP ;
           { CDR ; CDR @accounts } ;
           PUSH nat 0 ;
           DIP 2 { DUP @balance } ;
           DIG 2 ;
           COMPARE ;
           EQ ;
           IF { NONE nat } { DIP { DUP @balance } ; SWAP ; SOME } ;
           RENAME @v ;
           DIP 3 { DUP } ;
           DIG 3 ;
           DIP 3 { DROP 2 } ;
           CAR @a ;
           UPDATE ;
           DUP @accounts ;
           DIP 4 { DUP @tokens } ;
           DIG 4 ;
           DIP 2 { DUP @accounts } ;
           DIG 2 ;
           DIP 7 { DUP @dest } ;
           DIG 7 ;
           PAIR ;
           DUP ;
           CDR @accounts ;
           DIP { DUP } ;
           SWAP ;
           CAR @a ;
           GET ;
           IF_NONE { PUSH nat 0 } {} ;
           DIP { DROP } ;
           ADD @new_dest_balance ;
           PAIR ;
           DIP 5 { DUP @dest } ;
           DIG 5 ;
           PAIR ;
           DUP ;
           { CDR ; CAR @balance } ;
           DIP { DUP } ;
           SWAP ;
           { CDR ; CDR @accounts } ;
           PUSH nat 0 ;
           DIP 2 { DUP @balance } ;
           DIG 2 ;
           COMPARE ;
           EQ ;
           IF { NONE nat } { DIP { DUP @balance } ; SWAP ; SOME } ;
           RENAME @v ;
           DIP 3 { DUP } ;
           DIG 3 ;
           DIP 3 { DROP 8 } ;
           CAR @a ;
           UPDATE ;
           PAIR %accounts ;
           DIP 3 { DUP @dest } ;
           DIG 3 ;
           CONTRACT %receiveTokens (pair address (pair nat (option bytes))) ;
           IF_NONE
             { DIP { DUP @data } ;
               SWAP ;
               IF_NONE
                 { NIL operation }
                 { PUSH string "Cannot send data to a non TokenReceiver contract" ; FAILWITH } }
             { NIL operation ;
               DIP { DUP @dest } ;
               SWAP ;
               PUSH mutez 0 ;
               DIP 5 { DUP @data } ;
               DIG 5 ;
               DIP 7 { DUP @tokens } ;
               DIG 7 ;
               DIP 5 { DROP } ;
               PAIR ;
               SENDER ;
               PAIR ;
               TRANSFER_TOKENS ;
               CONS } ;
           DIP 2 { DROP 5 } ;
           RENAME @ops ;
           PAIR }
         { IF_LEFT
             { RENAME @_addr_balanceOf_handler_slash_48 ;
               DIP 2 { DUP @storage } ;
               DIG 2 ;
               DIP { DUP } ;
               SWAP ;
               CAR @addr ;
               PUSH mutez 0 ;
               AMOUNT ;
               COMPARE ;
               NEQ ;
               IF { PUSH string "Don't send DUN" ; FAILWITH } { UNIT } ;
               DROP ;
               DIP { DUP @storage } ;
               SWAP ;
               NIL operation ;
               DIP 4 { DUP } ;
               DIG 4 ;
               CDR @balanceOf_handler ;
               PUSH mutez 0 ;
               DIP 5 { DUP @storage } ;
               DIG 5 ;
               CAR %accounts ;
               DIP 5 { DUP @addr } ;
               DIG 5 ;
               PAIR ;
               DUP ;
               CDR @accounts ;
               DIP { DUP } ;
               SWAP ;
               CAR @a ;
               GET ;
               IF_NONE { PUSH nat 0 } {} ;
               DIP { DROP } ;
               DIP 5 { DUP @addr } ;
               DIG 5 ;
               DIP 6 { DROP 3 } ;
               PAIR ;
               TRANSFER_TOKENS ;
               CONS ;
               PAIR }
             { IF_LEFT
                 { RENAME @totalSupply_handler_slash_53 ;
                   DIP 2 { DUP @storage } ;
                   DIG 2 ;
                   PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   NEQ ;
                   IF { PUSH string "Don't send DUN" ; FAILWITH } { UNIT } ;
                   DROP ;
                   DUP @storage ;
                   NIL operation ;
                   DIP 3 { DUP @totalSupply_handler } ;
                   DIG 3 ;
                   PUSH mutez 0 ;
                   DIP 4 { DUP @storage } ;
                   DIG 4 ;
                   DIP 5 { DROP 2 } ;
                   { CDR ; CAR %totalSupply } ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   PAIR }
                 { IF_LEFT
                     { RENAME @tokens_slash_55 ;
                       DIP 2 { DUP @storage } ;
                       DIG 2 ;
                       PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       NEQ ;
                       IF { PUSH string "Don't send DUN" ; FAILWITH } { UNIT } ;
                       DROP ;
                       DUP @storage ;
                       CAR @accounts %accounts ;
                       DUP @accounts ;
                       SENDER ;
                       PAIR ;
                       DUP ;
                       CDR @accounts ;
                       DIP { DUP } ;
                       SWAP ;
                       CAR @a ;
                       GET ;
                       IF_NONE { PUSH nat 0 } {} ;
                       DIP { DROP } ;
                       DIP 2 { DUP @storage } ;
                       DIG 2 ;
                       CDR ;
                       DIP 2 { DUP @accounts } ;
                       DIG 2 ;
                       DIP 5 { DUP @tokens } ;
                       DIG 5 ;
                       DIP 3 { DUP @sender_balance } ;
                       DIG 3 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE
                         { DIP 2 { DUP @sender_balance } ;
                           DIG 2 ;
                           PUSH string "Not enough tokens for transfer" ;
                           PAIR ;
                           FAILWITH }
                         {} ;
                       RENAME @new_sender_balance ;
                       PAIR ;
                       SENDER ;
                       PAIR ;
                       DUP ;
                       { CDR ; CAR @balance } ;
                       DIP { DUP } ;
                       SWAP ;
                       { CDR ; CDR @accounts } ;
                       PUSH nat 0 ;
                       DIP 2 { DUP @balance } ;
                       DIG 2 ;
                       COMPARE ;
                       EQ ;
                       IF { NONE nat } { DIP { DUP @balance } ; SWAP ; SOME } ;
                       RENAME @v ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP 3 { DROP 2 } ;
                       CAR @a ;
                       UPDATE ;
                       PAIR %accounts ;
                       DUP ;
                       CAR %accounts ;
                       SWAP ;
                       CDR ;
                       CDR ;
                       DIP 5 { DUP @tokens } ;
                       DIG 5 ;
                       DIP 5 { DUP @storage } ;
                       DIG 5 ;
                       { CDR ; CAR %totalSupply } ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       DIP 3 { DROP 4 } ;
                       RENAME @totalSupply ;
                       PAIR %totalSupply ;
                       SWAP ;
                       PAIR %accounts ;
                       NIL operation ;
                       PAIR }
                     { RENAME @new_accounts_slash_64 ;
                       DIP 2 { DUP @storage } ;
                       DIG 2 ;
                       PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       NEQ ;
                       IF { PUSH string "Don't send DUN" ; FAILWITH } { UNIT } ;
                       DROP ;
                       DUP @storage ;
                       { CDR ; CDR ; CDR %internal } ;
                       CAR %owner ;
                       SENDER ;
                       COMPARE ;
                       NEQ ;
                       IF { PUSH string "Only owner can create accounts" ; FAILWITH } { UNIT } ;
                       DROP ;
                       DUP @storage ;
                       { CDR ; CAR %totalSupply } ;
                       DIP { DUP @storage } ;
                       SWAP ;
                       CAR %accounts ;
                       PAIR ;
                       DIP 2 { DUP @new_accounts } ;
                       DIG 2 ;
                       ITER { RENAME @_dest_tokens_acc_slash_66 ;
                              DIP { DUP } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              CAR @dest ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              CDR @tokens ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              CDR @acc ;
                              DUP @acc ;
                              DUP ;
                              CAR @accounts ;
                              PUSH nat 0 ;
                              DIP 4 { DUP @tokens } ;
                              DIG 4 ;
                              COMPARE ;
                              EQ ;
                              IF { DIP 2 { DUP @acc } ; DIG 2 }
                                 { DIP 3 { DUP @tokens } ;
                                   DIG 3 ;
                                   DIP 2 { DUP } ;
                                   DIG 2 ;
                                   CDR @totalSupply ;
                                   ADD ;
                                   DIP { DUP @accounts } ;
                                   SWAP ;
                                   DIP 5 { DUP @tokens } ;
                                   DIG 5 ;
                                   DIP 3 { DUP @accounts } ;
                                   DIG 3 ;
                                   DIP 8 { DUP @dest } ;
                                   DIG 8 ;
                                   PAIR ;
                                   DUP ;
                                   CDR @accounts ;
                                   DIP { DUP } ;
                                   SWAP ;
                                   CAR @a ;
                                   GET ;
                                   IF_NONE { PUSH nat 0 } {} ;
                                   DIP { DROP } ;
                                   ADD ;
                                   DIP 7 { DUP @dest } ;
                                   DIG 7 ;
                                   DIP { SOME } ;
                                   UPDATE ;
                                   PAIR } ;
                              DIP { DROP 7 } } ;
                       RENAME @_accounts_totalSupply ;
                       DIP { DUP @storage } ;
                       SWAP ;
                       CDR ;
                       DIP { DUP } ;
                       SWAP ;
                       CAR @accounts ;
                       PAIR %accounts ;
                       DUP ;
                       CAR %accounts ;
                       SWAP ;
                       CDR ;
                       CDR ;
                       DIP 2 { DUP } ;
                       DIG 2 ;
                       DIP 3 { DROP 3 } ;
                       CDR @totalSupply ;
                       PAIR %totalSupply ;
                       SWAP ;
                       PAIR %accounts ;
                       NIL operation ;
                       PAIR } } } } ;
       DIP { DROP 2 } };
