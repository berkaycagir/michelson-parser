parameter (or (pair %play nat key_hash) (or (nat %finish) (unit %default)));
storage (pair :storage (option %game (pair :game (nat %number) (pair (mutez %bet) (key_hash %player)))) (address %oracle_id));
code {
       DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         {
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           DIP { DUP } ;
           SWAP ;
           CAR @number ;
           PUSH nat 100 ;
           DIP { DUP @number } ;
           SWAP ;
           COMPARE ;
           GT ;
           IF { PUSH string "number must be <= 100" ; FAILWITH } { UNIT } ;
           DROP ;
           PUSH mutez 0 ;
           AMOUNT ;
           COMPARE ;
           EQ ;
           IF { PUSH string "bet cannot be 0tz" ; FAILWITH } { UNIT } ;
           DROP ;
           BALANCE ;
           AMOUNT ;
           PUSH nat 2 ;
           MUL ;
           COMPARE ;
           GT ;
           IF { PUSH string "I don't have enough money for this bet" ; FAILWITH }
              { UNIT } ;
           DROP ;
           DIP { DUP @storage } ;
           SWAP ;
           CAR %game ;
           IF_NONE
             { DIP { DUP @storage } ;
               SWAP ;
               CDR %oracle_id ;
               DIP 3 { DUP } ;
               DIG 3 ;
               CDR @player ;
               AMOUNT @bet ;
               PAIR %bet %player ;
               DIP 2 { DUP @number } ;
               DIG 2 ;
               PAIR %number ;
               SOME ;
               PAIR @storage %game %oracle_id ;
               NIL operation ;
               PAIR }
             { DUP @g ; PUSH string "Game already started with" ; PAIR ; FAILWITH } ;
           DIP { DROP 3 };
         }
         {
            IF_LEFT
             {
               DIP 2 { DUP @storage } ;
               DIG 2 ;
               DUP @storage ;
               CDR %oracle_id ;
               SENDER ;
               COMPARE ;
               NEQ ;
               IF { PUSH string "Random numbers cannot be generated" ; FAILWITH } { UNIT } ;
               DROP ;
               DUP @storage ;
               CAR %game ;
               IF_NONE
                 {
                    PUSH string "No game already started" ;
                    FAILWITH
                 }
                 {
                   DIP { DUP @storage } ;
                   SWAP ;
                   CDR %oracle_id ;
                   NONE (pair :game (nat %number) (pair (mutez %bet) (key_hash %player))) ;
                   PAIR @storage %game %oracle_id ;
                   DIP { DUP @game } ;
                   SWAP ;
                   CAR %number ;
                   PUSH nat 101 ;
                   DIP 5 { DUP @random_number } ;
                   DIG 5 ;
                   EDIV ;
                   IF_NONE { UNIT ; FAILWITH } { CDR @r } ;
                   COMPARE ;
                   LT ;
                   IF {
                        NIL operation
                      }
                      {
                        NIL operation ;
                        DIP 2 { DUP @game } ;
                        DIG 2 ;
                        CDR ; CDR %player ;
                        IMPLICIT_ACCOUNT ;
                        PUSH nat 100 ;
                        DIP 4 { DUP @game } ;
                        DIG 4 ;
                        CAR %number ;
                        DIP 5 { DUP @game } ;
                        DIG 5 ;
                        CDR ; CAR %bet ;
                        MUL ;
                        EDIV ;
                        IF_NONE { PUSH mutez 0 } { CAR @g } ;
                        DIP 4 { DUP @game } ;
                        DIG 4 ;
                        CDR ; CAR %bet ;
                        ADD @reimbursed ;
                        UNIT ;
                        TRANSFER_TOKENS ;
                        CONS
                        } ;
                   DIP 2 { DROP } ;
                   PAIR
               } ;
               DIP { DROP 2 }
            }
            { #RENAME @__slash_24 ;
               DIP 2 { DUP @storage } ;
               DIG 2 ;
               DIP { DROP } ;
               NIL operation ;
               PAIR
            }
       } ;
       DIP { DROP 2 };
    };
