parameter
  (or (unit %pay)
      (option %manage (pair :proposition (key_hash %destination) (mutez %amount))));
storage
  (pair :storage
     (set %owners address)
     (pair (map %actions address (pair :proposition (key_hash %destination) (mutez %amount)))
           (pair (nat %owners_length) (nat %min_agree))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         { RENAME @__slash_19 ;
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           DIP { DROP } ;
           NIL operation ;
           PAIR }
         { RENAME @action_slash_21 ;
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           SOURCE @owner ;
           DIP { DUP @storage } ;
           SWAP ;
           CAR %owners ;
           DIP { DUP @owner } ;
           SWAP ;
           MEM ;
           NOT ;
           IF { DUP @owner ; PUSH string "Not an owner" ; PAIR ; FAILWITH } { UNIT } ;
           DROP ;
           PUSH mutez 0 ;
           AMOUNT ;
           COMPARE ;
           NEQ ;
           IF { PUSH string "Don't send money while managing multisig" ; FAILWITH }
              { UNIT } ;
           DROP ;
           DIP { DUP @storage } ;
           SWAP ;
           DUP ;
           CAR %owners ;
           SWAP ;
           CDR ;
           CDR ;
           DIP 3 { DUP @storage } ;
           DIG 3 ;
           { CDR ; CAR %actions } ;
           DIP 5 { DUP @action } ;
           DIG 5 ;
           DIP 4 { DUP @owner } ;
           DIG 4 ;
           UPDATE ;
           PAIR %actions ;
           SWAP ;
           PAIR @storage %owners ;
           DUP @storage ;
           NIL operation ;
           PAIR @do_nothing ;
           DIP 4 { DUP @action } ;
           DIG 4 ;
           IF_NONE
             { DUP @do_nothing }
             { DUP @p ;
               BALANCE ;
               DIP { DUP @p } ;
               SWAP ;
               CDR %amount ;
               COMPARE ;
               GT ;
               IF { PUSH string "Balance to low for withdrawal" ; FAILWITH } { UNIT } ;
               DIP { DROP } ;
               DROP ;
               LAMBDA @equal_props
                 (pair (pair :proposition (key_hash %destination) (mutez %amount))
                       (pair :proposition (key_hash %destination) (mutez %amount)))
                 bool
                 { RENAME @_p1_p2_slash_5 ;
                   DUP ;
                   CAR @p1 ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR @p2 ;
                   DUP @p2 ;
                   CDR %amount ;
                   DIP 2 { DUP @p1 } ;
                   DIG 2 ;
                   CDR %amount ;
                   COMPARE ;
                   EQ ;
                   DIP { DUP @p2 } ;
                   SWAP ;
                   CAR %destination ;
                   DIP 3 { DUP @p1 } ;
                   DIG 3 ;
                   DIP 3 { DROP 3 } ;
                   CAR %destination ;
                   COMPARE ;
                   EQ ;
                   AND } ;
               DIP 3 { DUP @storage } ;
               DIG 3 ;
               DIP 2 { DUP @p } ;
               DIG 2 ;
               PAIR ;
               PAIR ;
               DUP ;
               CAR ;
               CDR @storage ;
               DUP @storage ;
               { CDR ; CDR ; CDR %min_agree } ;
               PUSH nat 0 ;
               DIP 2 { DUP @storage } ;
               DIG 2 ;
               { CDR ; CAR %actions } ;
               ITER { RENAME @___p_prim__cpt_slash_13 ;
                      DIP { DUP } ;
                      PAIR ;
                      DUP ;
                      CDR @cpt ;
                      DIP 5 { DUP } ;
                      DIG 5 ;
                      CDR @equal_props_slash_8 ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      CAR ;
                      CDR @p_prim_ ;
                      DIP 7 { DUP } ;
                      DIG 7 ;
                      CAR ;
                      CAR @p ;
                      PAIR ;
                      EXEC ;
                      IF { PUSH nat 1 ; DIP { DUP @cpt } ; ADD } { DUP @cpt } ;
                      DIP { DROP 3 } } ;
               DIP 2 { DROP 2 } ;
               RENAME @nb_agree ;
               COMPARE ;
               GE ;
               IF { DIP 2 { DUP @storage } ;
                    DIG 2 ;
                    DUP ;
                    CAR %owners ;
                    SWAP ;
                    CDR ;
                    CDR ;
                    PUSH (map address (pair :proposition (key_hash %destination) (mutez %amount))) {} ;
                    PAIR %actions ;
                    SWAP ;
                    PAIR %owners ;
                    NIL operation ;
                    DIP 2 { DUP @p } ;
                    DIG 2 ;
                    CAR %destination ;
                    IMPLICIT_ACCOUNT @c_dest ;
                    DIP 3 { DUP @p } ;
                    DIG 3 ;
                    CDR %amount ;
                    UNIT ;
                    TRANSFER_TOKENS @op ;
                    CONS ;
                    PAIR }
                  { DIP { DUP @do_nothing } ; SWAP } ;
               DIP { DROP } } ;
           DIP { DROP 5 } } ;
       DIP { DROP 2 } };
