parameter %submit_auction key_hash;
storage
  (pair :storage
     (timestamp %auction_end)
     (pair (mutez %highest_bid) (key_hash %bidder)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DIP { DUP @storage } ;
       SWAP ;
       CAR %auction_end ;
       NOW ;
       COMPARE ;
       GT ;
       IF { PUSH string "timeout" ; FAILWITH } { UNIT } ;
       DROP ;
       AMOUNT @new_bid ;
       DIP 2 { DUP @storage } ;
       DIG 2 ;
       CDR ; CAR %highest_bid ;
       DIP { DUP @new_bid } ;
       SWAP ;
       COMPARE ;
       LE ;
       IF { PUSH string "too low" ; FAILWITH } { UNIT } ;
       DROP ;
       DIP 2 { DUP @storage } ;
       DIG 2 ;
       DUP ;
       CAR %auction_end ;
       SWAP ;
       CDR ;
       CDR %bidder ;
       DIP 2 { DUP @new_bid } ;
       DIG 2 ;
       PAIR %highest_bid %bidder ;
       SWAP ;
       PAIR @storage %auction_end ;
       DUP ;
       CAR %auction_end ;
       SWAP ;
       CDR ;
       CAR %highest_bid ;
       DIP 3 { DUP @parameter } ;
       DIG 3 ;
       SWAP ;
       PAIR %highest_bid %bidder ;
       SWAP ;
       PAIR @storage %auction_end ;
       NIL operation ;
       DIP 4 { DUP @storage } ;
       DIG 4 ;
       CDR ; CDR @previous_bidder %bidder ;
       IMPLICIT_ACCOUNT @refund_to ;
       DIP 5 { DUP @storage } ;
       DIG 5 ;
       DIP 4 { DROP 3 } ;
       CDR ; CAR @previous_bid %highest_bid ;
       UNIT ;
       TRANSFER_TOKENS @op ;
       CONS ;
       PAIR };
