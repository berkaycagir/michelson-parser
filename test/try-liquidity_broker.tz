parameter %default timestamp;
storage
  (pair :storage
     (string %state)
     (pair (timestamp %timeout)
           (pair (pair %pn mutez mutez) (pair (address %x) (pair (address %a) (address %b))))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       PUSH string "open" ;
       DIP 2 { DUP @storage } ;
       DIG 2 ;
       CAR %state ;
       COMPARE ;
       NEQ ;
       IF { UNIT ; FAILWITH }
          { DIP { DUP @storage } ;
            SWAP ;
            { CDR ; CAR %timeout } ;
            NOW ;
            COMPARE ;
            LT ;
            IF { DIP { DUP @storage } ;
                 SWAP ;
                 { CDR ; CDR ; CAR @_pn0_pn1 %pn } ;
                 BALANCE @b ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR @pn1 ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR @pn0 ;
                 PUSH mutez 1000000 ;
                 ADD ;
                 ADD @cost ;
                 COMPARE ;
                 LT ;
                 IF { DIP 2 { DUP @storage } ; DIG 2 ; NIL operation ; PAIR }
                    { DIP 2 { DUP @storage } ;
                      DIG 2 ;
                      CDR ;
                      PUSH string "success" ;
                      PAIR @storage %state ;
                      DUP @storage ;
                      NIL operation ;
                      DIP 2 { DUP @storage } ;
                      DIG 2 ;
                      { CDR ; CDR ; CDR ; CDR ; CAR %a } ;
                      CONTRACT unit ;
                      IF_NONE
                        { PUSH string "No entrypoint default with parameter type unit" ; FAILWITH }
                        {} ;
                      DIP 3 { DUP @storage } ;
                      DIG 3 ;
                      { CDR ; CDR ; CAR @___pn1 %pn } ;
                      CDR @pn1 ;
                      UNIT ;
                      TRANSFER_TOKENS @op2 ;
                      CONS ;
                      DIP 2 { DUP @storage } ;
                      DIG 2 ;
                      { CDR ; CDR ; CDR ; CAR %x } ;
                      CONTRACT unit ;
                      IF_NONE
                        { PUSH string "No entrypoint default with parameter type unit" ; FAILWITH }
                        {} ;
                      DIP 3 { DUP @storage } ;
                      DIG 3 ;
                      DIP 4 { DROP } ;
                      { CDR ; CDR ; CAR @_pn0__ %pn } ;
                      CAR @pn0 ;
                      UNIT ;
                      TRANSFER_TOKENS @op1 ;
                      CONS ;
                      PAIR } ;
                 DIP { DROP } }
               { DIP { DUP @storage } ;
                 SWAP ;
                 { CDR ; CDR ; CAR @_p__ %pn } ;
                 CAR @p ;
                 DIP 2 { DUP @storage } ;
                 DIG 2 ;
                 CDR ;
                 PUSH string "timeout" ;
                 PAIR @storage %state ;
                 PUSH mutez 1000000 ;
                 BALANCE @bal ;
                 SUB @available ;
                 DIP { DUP @storage } ;
                 SWAP ;
                 NIL operation ;
                 DIP 3 { DUP @storage } ;
                 DIG 3 ;
                 { CDR ; CDR ; CDR ; CDR ; CDR %b } ;
                 CONTRACT unit ;
                 IF_NONE
                   { PUSH string "No entrypoint default with parameter type unit" ; FAILWITH }
                   {} ;
                 PUSH mutez 1000000 ;
                 BALANCE ;
                 SUB @transfer ;
                 UNIT ;
                 TRANSFER_TOKENS @op2 ;
                 CONS ;
                 DIP 3 { DUP @storage } ;
                 DIG 3 ;
                 { CDR ; CDR ; CDR ; CAR %x } ;
                 CONTRACT unit ;
                 IF_NONE
                   { PUSH string "No entrypoint default with parameter type unit" ; FAILWITH }
                   {} ;
                 DIP 5 { DUP @p } ;
                 DIG 5 ;
                 DIP 4 { DUP @available } ;
                 DIG 4 ;
                 COMPARE ;
                 LT ;
                 IF { DIP 3 { DUP @available } ; DIG 3 }
                    { DIP 5 { DUP @p } ; DIG 5 } ;
                 DIP 4 { DROP 3 } ;
                 RENAME @transfer ;
                 UNIT ;
                 TRANSFER_TOKENS @op1 ;
                 CONS ;
                 PAIR } } ;
       DIP { DROP 2 } };
