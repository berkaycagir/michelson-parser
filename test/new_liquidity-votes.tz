parameter (or (string %vote) (unit %payout));
storage
  (pair :storage
     (big_map :voters address unit)
     (pair (map %votes string nat)
           (pair (map %addresses string key_hash) (timestamp %deadline))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         { RENAME @choice_slash_13 ;
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           DUP @storage ;
           CDR ; CDR ; CDR %deadline ;
           NOW ;
           COMPARE ;
           GT ;
           IF { PUSH string "Voting closed" ; FAILWITH } { UNIT } ;
           DROP ;
           PUSH mutez 5000000 ;
           AMOUNT ;
           COMPARE ;
           LT ;
           IF { PUSH string "Not enough money, at least 5DUN to vote" ; FAILWITH }
              { UNIT } ;
           DROP ;
           DUP @storage ;
           CAR %voters ;
           SENDER ;
           MEM ;
           IF { SENDER ; PUSH string "Has already voted" ; PAIR ; FAILWITH } { UNIT } ;
           DROP ;
           DUP @storage ;
           CDR ; CAR @votes %votes ;
           DUP @votes ;
           DIP 3 { DUP @choice } ;
           DIG 3 ;
           GET ;
           IF_NONE
             { DIP 2 { DUP @choice } ;
               DIG 2 ;
               PUSH string "Bad vote" ;
               PAIR ;
               FAILWITH }
             { DIP 2 { DUP @storage } ;
               DIG 2 ;
               DUP ;
               CAR %voters ;
               SWAP ;
               CDR ;
               CDR ;
               DIP 3 { DUP @votes } ;
               DIG 3 ;
               PUSH nat 1 ;
               DIP 4 { DUP @x } ;
               DIG 4 ;
               ADD ;
               DIP 7 { DUP @choice } ;
               DIG 7 ;
               DIP { SOME } ;
               UPDATE ;
               PAIR %votes ;
               SWAP ;
               PAIR @storage %voters ;
               DUP @storage ;
               CDR ;
               DIP { DUP @storage } ;
               SWAP ;
               CAR %voters ;
               UNIT ;
               SENDER ;
               DIP { SOME } ;
               DIP 4 { DROP 2 } ;
               UPDATE ;
               PAIR @storage %voters ;
               NIL operation ;
               PAIR } ;
           DIP { DROP 3 } }
         { RENAME @__slash_19 ;
           DIP 2 { DUP @storage } ;
           DIG 2 ;
           DUP @storage ;
           CDR ; CDR ; CDR %deadline ;
           NOW ;
           COMPARE ;
           LE ;
           IF { PUSH string "Voting ongoing" ; FAILWITH } { UNIT } ;
           DROP ;
           DUP @storage ;
           CDR ; CAR %votes ;
           PUSH (pair (list string) nat) (Pair {} 0) ;
           DIP { DUP @votes } ;
           SWAP ;
           ITER { RENAME @_name_nb_winners_max_slash_4 ;
                  DIP { DUP } ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  CAR @name ;
                  DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  CDR @nb ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  CDR ;
                  CAR @winners ;
                  DIP 3 { DUP } ;
                  DIG 3 ;
                  CDR ;
                  CDR @max ;
                  DUP @max ;
                  DIP 3 { DUP @nb } ;
                  DIG 3 ;
                  COMPARE ;
                  EQ ;
                  IF { DUP @max ;
                       DIP 2 { DUP @winners } ;
                       DIG 2 ;
                       DIP 5 { DUP @name } ;
                       DIG 5 ;
                       CONS ;
                       PAIR }
                     { DUP @max ;
                       DIP 3 { DUP @nb } ;
                       DIG 3 ;
                       COMPARE ;
                       GT ;
                       IF { DIP 2 { DUP @nb } ;
                            DIG 2 ;
                            NIL string ;
                            DIP 5 { DUP @name } ;
                            DIG 5 ;
                            CONS ;
                            PAIR }
                          { DUP @max ; DIP 2 { DUP @winners } ; DIG 2 ; PAIR } } ;
                  DIP { DROP 6 } } ;
           DIP { DROP } ;
           RENAME @_winners__max ;
           CAR @winners ;
           DIP { DUP @storage } ;
           SWAP ;
           DIP { DUP @winners } ;
           SWAP ;
           MAP { RENAME @name_slash_26 ;
                 DIP 3 { DUP @storage } ;
                 DIG 3 ;
                 CDR ; CDR ; CAR %addresses ;
                 DIP { DUP @name } ;
                 SWAP ;
                 GET ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 RENAME @dest ;
                 IMPLICIT_ACCOUNT ;
                 DIP 3 { DUP @winners } ;
                 DIG 3 ;
                 SIZE ;
                 BALANCE ;
                 EDIV ;
                 IF_NONE { PUSH string "No winners" ; FAILWITH } { CAR @v } ;
                 DIP 2 { DROP } ;
                 RENAME @amount ;
                 UNIT ;
                 TRANSFER_TOKENS } ;
           DIP 2 { DROP 3 } ;
           RENAME @operations ;
           PAIR } ;
       DIP { DROP 2 } };
#code @fee
#  { DUP ;
#    DIP { CDR @storage_slash_1 } ;
#    CAR @parameter_slash_2 ;
#    DUP @parameter ;
#    IF_LEFT
#      { RENAME @choice_slash_40 ;
#        PUSH @max_storage nat 5 ;
#        PUSH @fee mutez 10000 ;
#        PAIR ;
#        DIP { DROP } }
#      { RENAME @__slash_44 ;
#        PUSH nat 0 ;
#        PUSH mutez 250 ;
#        { DIP 4 { DUP @storage } ; DIG 4 } ;
#        { CDR ; CAR %votes } ;
#        SIZE ;
#        MUL ;
#        PUSH mutez 8000 ;
#        ADD @fee ;
#        PAIR ;
#        DIP { DROP } } ;
#    DIP { DROP 2 } };
