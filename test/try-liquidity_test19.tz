parameter %default signature;
storage (pair :storage (key %key) (pair (bytes %hash) (address %c)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @sign_slash_2 ;
       PUSH @x (or :PlusOne.t (unit %PlusOne.A) (unit %PlusOne.B)) (Left Unit) ;
       IF_LEFT { DROP ; UNIT } { DROP ; UNIT ; FAILWITH } ;
       DROP ;
       DIP { DUP @storage } ;
       SWAP ;
       CAR %key ;
       HASH_KEY @key_hash ;
       PUSH key_hash "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx" ;
       DIP { DUP @key_hash } ;
       SWAP ;
       COMPARE ;
       EQ ;
       IF { UNIT ; FAILWITH } { UNIT } ;
       DROP ;
       PUSH key "edpkuTXkJDGcFd5nh6VvMz8phXxU3Bi7h6hqgywNFi1vZTfQNnS1RV" ;
       HASH_KEY ;
       DIP { DUP @key_hash } ;
       SWAP ;
       COMPARE ;
       EQ ;
       IF { UNIT ; FAILWITH } { UNIT } ;
       DROP ;
       PUSH int 9 ;
       PUSH nat 2 ;
       AMOUNT @amount ;
       EDIV ;
       IF_NONE { UNIT ; FAILWITH } {} ;
       RENAME @amount ;
       CAR ;
       DIP 2 { DUP @key_hash } ;
       DIG 2 ;
       SOME @delegate ;
       CREATE_CONTRACT
         { parameter %default unit ;
           storage int ;
           code { DUP ;
                  DIP { CDR @s_slash_1 } ;
                  CAR @__slash_2 ;
                  PUSH int 1 ;
                  DIP 2 { DUP @s } ;
                  DIG 2 ;
                  DIP 2 { DROP 2 } ;
                  ADD ;
                  NIL operation ;
                  PAIR } } ;
       PAIR @_c_op_c_addr ;
       DIP 3 { DUP @storage } ;
       DIG 3 ;
       DUP ;
       CAR %key ;
       SWAP ;
       CDR ;
       CAR %hash ;
       DIP 2 { DUP } ;
       DIG 2 ;
       CDR @c_addr ;
       SWAP ;
       PAIR %hash %c ;
       SWAP ;
       PAIR @storage %key ;
       NIL operation ;
       DIP 2 { DUP } ;
       DIG 2 ;
       DIP 3 { DROP 4 } ;
       CAR @c_op ;
       CONS ;
       PAIR };
